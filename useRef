import { useState, useEffect, useRef } from "react";
import ReactDOM from "react-dom/client";
function App() {
  const [inputValue, setInputValue] = useState("");
  const count = useRef(0);
  useEffect(() => {
    count.current = count.current + 1;
  });
  return (
    <>
      <input type="text" value={inputValue}
        onChange={(e) => setInputValue(e.target.value)}/>
      <h1>Render Count: {count.current}</h1>
    </>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);






import { useRef } from "react";
import ReactDOM from "react-dom/client";
function App() {
  const inputElement = useRef();
  const focusInput = () => {
    inputElement.current.focus();
    alert(inputElement.current.value);
  };
  return (
    <>
      <input type="text" ref={inputElement} />
      <button onClick={focusInput}>Focus Input</button>
    </>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);







